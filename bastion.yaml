---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation for create bastion'

Parameters:
  VpcID:
    Description: VPC for EC2
    Type: AWS::EC2::VPC::Id
    Default: "vpc-023a0d90eb3b24377"
  SubNetId:
    Description: Subnet for EC2
    Type: AWS::EC2::Subnet::Id
    Default: "subnet-0d5b2ba0ed2618c6c"
  CidrIp:
    Description: EC2 CIDR input
    Type: String
    Default: 0.0.0.0/0
  KeyName:
    Description: KeyPair for EC2
    Type: AWS::EC2::KeyPair::KeyName
    Default: bastion-key
  InstanceType:
    Description: EC2 Type
    Type: String
    Default: t2.micro
  Region:
    Description: Region
    Type: String
    Default: us-east-1
Mappings:
  AWSInstanceType2Arch:
      t1.micro:
       Arch: HVM64
      t2.nano:
        Arch: HVM64
      t2.micro:
        Arch: HVM64
  AWSRegionArch2AMI:
      us-east-1:
        HVM64: ami-0080e4c5bc078760e
        HVMG2: ami-0aeb704d503081ea6

Resources:
# 1) EC2 - Bastion
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId:
        Ref: VpcID
      SubnetId:
        Ref: SubNetId
      InstanceType:
        Ref: InstanceType
      SecurityGroupIds:
      - Ref: InstanceSecurityGroup
      KeyName:
        Ref: KeyName
      Tags: 
      - Key: "Name"
        Value: "IP-BASTIONA"
      ImageId:
          Fn::FindInMap:
          - AWSRegionArch2AMI
          - Ref: AWS::Region
          - Fn::FindInMap:
            - AWSInstanceType2Arch
            - Ref: InstanceType
            - Arch
# 2) Security Group:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId:
          Ref: VpcID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: CidrIp
# 3) EIP
  ElasticIPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
      InstanceId: !Ref EC2Instance
      Tags: 
        - Key: "Name"
          Value: "IP-BASTION"
