---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation for create bastion'

Parameters:
  VpcID:
    Description: VPC for EC2
    Type: AWS::EC2::VPC::Id
    Default: "vpc-03a99a5e76c36271f"
  SubNetId:
    Description: Subnet for EC2
    Type: AWS::EC2::Subnet::Id
    Default: "subnet-090da756ea2e7bdf3"
  CidrIp:
    Description: EC2 CIDR input
    Type: String
    Default: 10.0.0.0/8
  KeyName:
    Description: KeyPair for EC2
    Type: AWS::EC2::KeyPair::KeyName
    Default: bastion-key
  InstanceType:
    Description: EC2 Type
    Type: String
    Default: t3.medium
  Region:
    Description: Region
    Type: String
    Default: us-east-1
  NodeName:
    Description: Node Name
    Type: String
    Default: "NODE01-K8S"
Mappings:
  AWSInstanceType2Arch:
      t3.nano:
        Arch: HVM64
      t3.micro:
        Arch: HVM64
      t3.medium:
        Arch: HVM64
  AWSRegionArch2AMI:
      us-east-1:
        HVM64: ami-0a0b9243cac256a4b

Resources:
# 1) EC2 - NODE
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId:
        Ref: VpcID
      SubnetId:
        Ref: SubNetId
      InstanceType:
        Ref: InstanceType
      SecurityGroupIds:
      - Ref: InstanceSecurityGroup
      KeyName:
        Ref: KeyName
      Tags: 
      - Key: Name
        Value: 
          Ref: NodeName
      ImageId:
          Fn::FindInMap:
          - AWSRegionArch2AMI
          - Ref: AWS::Region
          - Fn::FindInMap:
            - AWSInstanceType2Arch
            - Ref: InstanceType
            - Arch

# 4) Security Group:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId:
          Ref: VpcID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: CidrIp